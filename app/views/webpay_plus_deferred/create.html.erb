<%= render 'shared/breadcrumbs', breadcrumbs: [
  { label: 'Inicio', path: root_path },
  { label: 'Webpay Plus Diferido', path: '/webpay-plus-diferido/create' }
] %>

<h1>Webpay Plus Diferido - Creación de transacción</h1>
<p class="mb-32">
  En esta etapa, se procederá a la creación de una transacción con el fin de obtener un identificador único.
  Esto nos permitirá redirigir al Tarjetahabiente hacia el formulario de pago en el siguiente paso.
</p>

<p class="mb-32">
  Todas las transacciones en este proyecto de ejemplo son realizadas en
          ambiente de integración.
</p>

<h2 id="request">Paso 1: Petición</h2>
<ol class="bullet-list mb-32">
  <li>Comienza por importar la librería WebpayPlus en tu proyecto.</li>
  <li>Luego, crea una transacción utilizando las funciones proporcionadas mediante el SDK.</li>
</ol>

<pre>
  <code class="language-ruby">
  options = Transbank::Webpay::Options.new(commerce_code, api_key, environment)
  @tx = Transbank::Webpay::WebpayPlus::Transaction.new(options)
  @resp = @transaction.create(buy_order, session_id, amount, return_url)
  </code>
</pre>

<h2 id="response">Paso 2: Respuesta</h2>
<p class="mb-32">
  Una vez que hayas creado la transacción, aquí encontrarás los datos de respuesta generados por el proceso.
</p>

<pre>
  <code id="respond-data-json" class="language-json"><%= JSON.pretty_generate(@respond_data) %></code>
</pre>

<h2 id="form">Paso 3: Creación del formulario</h2>
<p class="mb-32">
  Utiliza estos datos de respuesta para redireccionar al usuario al formulario de pago al Tarjetahabiente.
  Este formulario será la interfaz a través de la cual el usuario realizará su transacción.
</p>

<pre>
  <code class="language-html">
<%= h(<<~HTML)
<form action="https://webpay3gint.transbank.cl/webpayserver/initTransaction" method="POST">
  <input type="hidden" name="token_ws" value="#{@respond_data["token"]}" />
  <input type="submit" value="Pagar" />
</form>
HTML
%>
  </code>
</pre>

<h2 id="example">Ejemplo</h2>
<p class="mb-32">
  Para llevar a cabo una transacción de compra en nuestro sistema, primero debemos crear la transacción. Utilizaremos
  los siguientes datos para configurar la transacción:
</p>

<div class="mb-32">
  <%= render partial: 'shared/request_table', locals: { data: @request_data } %>
</div>

<p class="mb-32">
  Por último, con la respuesta del servicio que confirma la creación de la transacción, procedemos a crear el
  formulario de pago. Para fines de este ejemplo, haremos visible el campo "token_ws", el cual es esencial para
  completar el proceso de pago de manera exitosa.
</p>

<span>
  Antes de continuar al formulario de Webpay, asegúrate de contar con los datos de las tarjetas de prueba que están en la
  <%= link_to 'documentación.', 'https://transbankdevelopers.cl/documentacion/como_empezar#tarjetas-de-prueba', class: 'tbk-link' %>
</span>

<form action="<%= @respond_data[:url] %>" method="POST">
  <div class="tbk-card">
    <span class="tbk-card-title">Formulario de redirección</span>
    <label class="tbk-label" for="token_ws">Token</label>
    <input id="token-input" type="text" name="token_ws" class="tbk-input-text" value="<%= @respond_data[:token] %>" />
    <div class="tbk-card-footer">
      <button class="tbk-button primary">PAGAR</button>
    </div>
  </div>
</form>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    function updateRespondData() {
      fetch("<%= refresh_webpay_plus_json_path %>")
        .then(response => response.json())
        .then(data => {
          document.getElementById("respond-data-json").textContent = JSON.stringify(data, null, 2);
          document.getElementById("token-input").value = data.token || "";
        })
        .catch(error => console.error("Error al actualizar los datos"));
    }
   
    setInterval(updateRespondData, 300000);
    updateRespondData();
  });
</script>
